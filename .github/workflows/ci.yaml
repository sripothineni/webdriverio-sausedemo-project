name: CI  #Workflow name
on: [push, pull_request] # when the workflow is triggered
workflow_dispatch:
    inputs:
      suite:
        description: 'Enter test suite to run: @smoke, @regression, or all'
        required: true
        default: 'all'

jobs:
  build:
    runs-on: ubuntu-latest # where to run pulls the image
    steps:    # individual tasks for the job
        - name: ⬇️ Checkout Code   # Uses GitHub's official action to clone the repo so that it can access your code
          uses: actions/checkout@v4

        - name: 🐢 Setup Node   # Installs Node.js using the version defined in your .nvmrc file or your specified version, This ensures consistent Node version across machines.
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: 🏗️ Install Dependencies   # Installs the project dependencies from package.json
          run: |
          echo "Test suite input: ${{ github.event.inputs.suite }}"

          if [[ "${{ github.event.inputs.suite }}" == "all" ]]; then
            echo "➡️ Running all tests"
            npm run test
          elif [[ "${{ github.event.inputs.suite }}" == "@smoke" ]] || [[ "${{ github.event.inputs.suite }}" == "@regression" ]]; then
            echo "➡️ Running tests with grep: ${{ github.event.inputs.suite }}"
            npx wdio wdio.conf.js --mochaOpts.grep='${{ github.event.inputs.suite }}'
          else
            echo "❌ Invalid test suite: ${{ github.event.inputs.suite }}"
            exit 1
          fi

        - name: 🧪 Test   # Runs your test suite via the custom script test:local defined in your package.json.
          run: npm run test

        - name: 🧪 Generate Allure Report
          if: always()  # Ensures it runs even if tests fail
          run: |
            npx allure generate allure-results --clean -o allure-report
  
        - name: 📦 Upload Allure Report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: allure-report
            path: allure-report